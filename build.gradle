import org.springframework.boot.gradle.tasks.run.BootRun

buildscript {
  ext {
    springBootVersion = '2.0.6.RELEASE'
  }
  repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://plugins.gradle.org/m2/' }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

plugins {
  id 'jacoco'
  id 'org.unbroken-dome.test-sets' version '2.1.1'
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
  baseName = 'freayafitness'
  version = '0.0.1'
}

group = 'stefanhauschildt'
sourceCompatibility = 1.8
targetCompatibility = 1.8
archivesBaseName = "freyafitness"

repositories {
  mavenCentral()
  maven { url = 'https://repo.spring.io/snapshot' }
  maven { url = 'https://repo.spring.io/milestone' }
}

ext {
  springCloudVersion = 'Finchley.SR2'
}

testSets {
  componentTest
  integrationTest
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
}

task bootRunH2(type: BootRun, dependsOn: 'build') {
  group = 'application'

  doFirst() {
    main = bootJar.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    systemProperty 'spring.profiles.active', 'h2'
  }
}

jacocoTestReport {
  reports {
    xml.enabled = false
    csv.enabled = false
    html.destination file("${buildDir}/jacocoHtml")
  }
  executionData(test, componentTest)
}

dependencies {
  compileOnly 'org.projectlombok:lombok:1.18.6'
  annotationProcessor 'org.projectlombok:lombok:1.18.6'

  compile group: 'org.apache.commons', name: 'commons-lang3'
  compile group: 'org.springframework.boot', name: 'spring-boot-devtools'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
  compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
  compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.0.RELEASE'
  compile 'org.springframework.security.oauth:spring-security-oauth2:2.3.0.RELEASE'
  compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0'
  compile group: 'org.liquibase', name: 'liquibase-core'

  runtime 'org.postgresql:postgresql:42.1.4'
  runtime 'com.h2database:h2:1.4.196'

  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation 'org.hibernate:hibernate-testing:5.2.15.Final'
  testImplementation 'org.testcontainers:postgresql:1.7.3'
  testImplementation 'org.mockito:mockito-junit-jupiter:2.23.0'

  componentTestCompile sourceSets.main.output
  componentTestCompile sourceSets.test.output
  integrationTestCompile sourceSets.main.output
  integrationTestCompile sourceSets.test.output
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}
